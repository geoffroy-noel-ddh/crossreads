const STATS_PATH = 'app/stats.json'
const SESSION_KEY = 'AvailableTags.tags'

import { AnyFileSystem } from "./any-file-system.mjs";


export class AvailableTags {
  /*
  Keep a dynamic list of unique tags available for marking annotations.

  load() a list of annotation tags from:
  . a index file (generated by regular indexing script)
  . window.localStorage if run from within a browser

  addTag(tag) to the list

  saveToSession(): to save the list in the browser session
  */

  constructor() {
    this.tags = []
  }

  addTag(tag) {
    if (this.tags.includes(tag)) return;
    this.tags.push(tag)
    this.saveToSession()
  }

  async load() {
    // union b/w tyags from session & file
    this.tags = [...new Set(this._loadFromSession().concat(await this._loadFromFile()))]; 
    this.tags = this.tags.sort()
  }

  async _loadFromFile() {
    let afs = new AnyFileSystem()
    let res = await afs.readJson(STATS_PATH)
    return res.ok ? Object.keys(res.data.t) : []
  }

  _loadFromSession() {
    return JSON.parse(window.localStorage.getItem(SESSION_KEY) || '[]')
  }

  saveToSession() {
    window.localStorage.setItem(SESSION_KEY, JSON.stringify(this.tags))
  }

}
